{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "onBoardCustomer",
    "fullyQualifiedName": "Helper.onBoardCustomer",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "eSign Selection",
    "collectionId": "eSign Selection_Helper",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n\t\t\n\t\tif(appsmith.URL.queryParams.npg == \"formSuccess\"){\n\t\t\tif(appsmith.store.vayApplicantRole!=\"\")\n\t\t\t\t{\n\t\t\t\t\tawait storeValue(\"customerID\",  appsmith.store.vayApplicantRole.substring(0,3).toUpperCase()+appsmith.store.customerIsIndForeign+[...Array(8)].map(() => Math.floor(Math.random() * 17).toString(17)).join(''));\n\t\t\t\t\tawait storeValue(\"customerParticipantID\",appsmith.store.vayApplicantRole.substring(0,3).toUpperCase()+appsmith.store.customerIsIndForeign+[...Array(8)].map(() => Math.floor(Math.random() * 18).toString(18)).join(''));\n\t\t\t\t}else{\n\t\t\t\t\tshowAlert('Customer Registration failed due to incorrect Data');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\n\t\t\t//await storeValue(\"customerParticipantID\",  [...Array(8)].map(() => Math.floor(Math.random() * 18).toString(18)).join(''));\n\t\t\t\n\t\t\treturn updateCustomerIDandPartID.run( \n\t\t\t\t async (response) => {\n\t\t\t\t showAlert('Customer ID and Participant ID updated for Customer');\n\t\t\t\t await updateBankCustID.run( \n\t\t\t\t\t \t\tasync (response) => {\n\t\t\t\t \t\t\t\t\tshowAlert('Customer ID updated for Bank');\n\t\t\t\t \t\t\t\t\tawait updateKeyPersonCustID.run(\n\t\t\t\t\t\t\t\t\t\tasync (response) => {\n\t\t\t\t \t\t\t\t\t\t\t\tshowAlert('Customer ID updated for Key Person');\n\t\t\t\t \t\t\t\t\t\t\t\tawait updateKeyPersonLimitCustID.run(\n\t\t\t\t\t\t\t\t\t\t\t\t\tasync (response) => {\n\t\t\t\t \t\t\t\t\t\t\t\t\t\t\tshowAlert('Customer ID updated for Key Person');\n\t\t\t\t \t\t\t\t\t\t\t\t\t\t\tawait updateUBOCustID.run(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tasync (response) => {\n\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\tshowAlert('Customer ID updated for UBO');\n\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\tawait updateKYCCustID.run(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(response) => {\n\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowAlert('Customer ID updated for KYC Proofs');\n\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t} )\n\t\t\t  } )\n\t\t\tawait Helper.clearappsmithStore();\n\t\t\tnavigateTo('Application Submission Success', {})\n\t\t}\n\t}",
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n\t\t\n\t\tif(appsmith.URL.queryParams.npg == \"formSuccess\"){\n\t\t\tif(appsmith.store.vayApplicantRole!=\"\")\n\t\t\t\t{\n\t\t\t\t\tawait storeValue(\"customerID\",  appsmith.store.vayApplicantRole.substring(0,3).toUpperCase()+appsmith.store.customerIsIndForeign+[...Array(8)].map(() => Math.floor(Math.random() * 17).toString(17)).join(''));\n\t\t\t\t\tawait storeValue(\"customerParticipantID\",appsmith.store.vayApplicantRole.substring(0,3).toUpperCase()+appsmith.store.customerIsIndForeign+[...Array(8)].map(() => Math.floor(Math.random() * 18).toString(18)).join(''));\n\t\t\t\t}else{\n\t\t\t\t\tshowAlert('Customer Registration failed due to incorrect Data');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\n\t\t\t//await storeValue(\"customerParticipantID\",  [...Array(8)].map(() => Math.floor(Math.random() * 18).toString(18)).join(''));\n\t\t\t\n\t\t\treturn updateCustomerIDandPartID.run( \n\t\t\t\t async (response) => {\n\t\t\t\t showAlert('Customer ID and Participant ID updated for Customer');\n\t\t\t\t await updateBankCustID.run( \n\t\t\t\t\t \t\tasync (response) => {\n\t\t\t\t \t\t\t\t\tshowAlert('Customer ID updated for Bank');\n\t\t\t\t \t\t\t\t\tawait updateKeyPersonCustID.run(\n\t\t\t\t\t\t\t\t\t\tasync (response) => {\n\t\t\t\t \t\t\t\t\t\t\t\tshowAlert('Customer ID updated for Key Person');\n\t\t\t\t \t\t\t\t\t\t\t\tawait updateKeyPersonLimitCustID.run(\n\t\t\t\t\t\t\t\t\t\t\t\t\tasync (response) => {\n\t\t\t\t \t\t\t\t\t\t\t\t\t\t\tshowAlert('Customer ID updated for Key Person');\n\t\t\t\t \t\t\t\t\t\t\t\t\t\t\tawait updateUBOCustID.run(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tasync (response) => {\n\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\tshowAlert('Customer ID updated for UBO');\n\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\tawait updateKYCCustID.run(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(response) => {\n\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowAlert('Customer ID updated for KYC Proofs');\n\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t} )\n\t\t\t  } )\n\t\t\tawait Helper.clearappsmithStore();\n\t\t\tnavigateTo('Application Submission Success', {})\n\t\t}\n\t}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "eSign Selection_onBoardCustomer",
  "deleted": false,
  "gitSyncId": "61e6589e69c0e21f279fec21_620caef35ccb2f678fcab85a"
}